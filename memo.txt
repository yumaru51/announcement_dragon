
【今日やること】
登録処理したい。
転職サイト、言語で調べよう。
●urlパラメーターでアプリ名が必要になるときはなんだっけ。
　各アプリのurls.pyにapp_nameを設定することで、テンプレートタグのurlでapp_name.nameとできる。
　（またはreverse()関数）
　これにより異なるアプリ間でのURL逆引きで、同じnameでも衝突を避けることができる。
　動的にもできそうやな。

EXCELでA4で隅に行ったら自動改行。またはあとから改行。

めもにまとめる「python\[python]めも.xlsx」「python\【マニュアル】配列変数ごちゃごちゃになるので整理.xlsx」


【リスト型】
list['value', 'value', 'value',,,]
（view?template?）
インデックス指定で値を取り出すと[]がはずれる。またはforで1つずつにすると[]が外れる。

【辞書型】
dict{'key': value, 'key': value,,,}
（view?template?）
キー指定で値を取り出すと｛｝が外れる。
forそのままだとkeyが１つずつとれる。Valueを取りたい場合「.values()」。
(key, value)タプル型のリスト形式[(key1, value1), (key2, value2), (key3, value3),,,]にできる「.items()」。
↑djangoのレンダー時めっちゃ便利かも

【辞書＆リスト】
宣言：
変数 = {'key': [[0, 1, 2], [3, 4, 5], [6, 7, 8]]}
取出：
変数['key']		0: [0, 1, 2], 1: [3, 4, 5], 2: [6, 7, 8]
変数['key'][0]		[0, 1, 2]
変数['key'][1]		[3, 4, 5]
変数['key'][2]		[6, 7, 8]


多次元配列リスト
初期化	list = []
追加	list.append([filed1, filed2, filed3, filed4, filed5])
list[X][Y]
index[Y]
index[X]


【明日やること】
GETにするか、POSTにするか。
URLイメージ　user_name/category1/category2/
jqueryやめたいが、、、
ネットワークにあげたい！！！スマホでも起動したい！
DBファイル分けるか？ルーターにするか？
VIEWフォルダに格納するか？



【備忘録】
仕様、
　自分がどのカテゴリのサイトを作りたいのか。「レビューサイト」や「比較サイト」
　最初は、ジャンル・製品は固定
　自分用→誰でも登録できるように、

